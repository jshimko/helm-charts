apiVersion: apps/v1
kind: Deployment
metadata:
  name: "stack-backend"
  labels:
    {{- include "stack-auth.backend.labels" . | nindent 4 }}
  {{- with .Values.backend.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "stack-auth.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.backend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "stack-auth.backend.labels" . | nindent 8 }}
        {{- with .Values.backend.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.backend.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: stack-backend
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      containers:
        - name: stack-backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.port }}
              protocol: TCP

          {{- with .Values.backend.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          env:
            {{- if or .Values.postgrescluster.enabled .Values.backend.postgresClusterSecret }}
            - name: PGO_PGBOUNCER_URI
              valueFrom:
                secretKeyRef:
                  {{- if .Values.backend.postgresClusterSecret }}
                  name: "{{ .Values.backend.postgresClusterSecret }}"
                  {{- else }}
                  name: "{{ .Values.postgrescluster.name }}-pguser-stack"
                  {{- end }}
                  key: "pgbouncer-uri"

            # If we are connecting through pgbouncer we need to provide a direction connection url
            # as well because prisma migrations do not support connection pooling
            # https://www.prisma.io/docs/guides/performance-and-optimization/connection-management/configure-pg-bouncer#prisma-migrate-and-pgbouncer-workaround
            - name: POSTGRES_DIRECT_URI
              valueFrom:
                secretKeyRef:
                  {{- if .Values.backend.postgresClusterSecret }}
                  name: "{{ .Values.backend.postgresClusterSecret }}"
                  {{- else }}
                  name: "{{ .Values.postgrescluster.name }}-pguser-stack"
                  {{- end }}
                  key: "uri"

            # map above to the correct Stack env variables
            - name: STACK_DATABASE_CONNECTION_STRING
              value: "$(PGO_PGBOUNCER_URI)?{{ .Values.backend.dbUrlOptions }}&pgbouncer=true"
            - name: STACK_DIRECT_DATABASE_CONNECTION_STRING
              value: "$(POSTGRES_DIRECT_URI)?{{ .Values.backend.dbUrlOptions }}"
            {{- end }}

            {{- with .Values.backend.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}

          {{- if .Values.backend.startupProbe }}
          startupProbe:
            {{- toYaml .Values.backend.startupProbe | nindent 12 }}
          {{- end }}

          {{- if .Values.backend.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
          {{- end }}

          {{- if .Values.backend.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
          {{- end }}


          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}

          {{- with .Values.backend.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}

      {{- with .Values.backend.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
