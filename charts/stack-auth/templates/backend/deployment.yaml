apiVersion: apps/v1
kind: Deployment
metadata:
  name: "stack-backend"
  labels:
    {{- include "stack-auth.backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "stack-auth.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.backend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "stack-auth.backend.labels" . | nindent 8 }}
        {{- with .Values.backend.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.backend.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: stack-backend
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      containers:
        - name: stack-backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.port }}
              protocol: TCP
          env:
            {{- if .Values.postgres.enabled  }}
            - name: STACK_DATABASE_CONNECTION_STRING
              value: "postgresql://{{ .Values.global.postgresql.auth.username }}:{{ .Values.global.postgresql.auth.password }}@{{ .Release.Name }}-postgresql:5432/{{ .Values.global.postgresql.auth.database }}?{{ .Values.backend.dbUrlOptions }}"
            - name: STACK_DIRECT_DATABASE_CONNECTION_STRING
              value: "$(STACK_DATABASE_CONNECTION_STRING)"
            {{- end }}

            {{- range .Values.backend.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}

          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}

          {{- if .Values.backend.startupProbe }}
          startupProbe:
            {{- toYaml .Values.backend.startupProbe | nindent 12 }}
          {{- end }}

          {{- if .Values.backend.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
          {{- end }}

          {{- if .Values.backend.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
          {{- end }}


          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}

          {{- with .Values.backend.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}

      {{- with .Values.backend.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
